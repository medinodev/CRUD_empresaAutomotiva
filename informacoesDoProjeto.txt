[Funcionalidade] - O sistema deve servir como uma espécie de cadastro interno de uma empresa. Será possível cadastrar,
visualizar, editar e excluir um cliente, funcionário ou serviço.

Requisitos que o sistema deve ter:
 ● Pelo menos 3 classes abstratas; (1,0 ponto) >>Implementado<<
 ● Pelo menos 3 interfaces; (1,0 ponto) >>Implementado<<

 ● Tratamento de exceção em pelo menos 5 classes; (0,5 ponto) 1, 1, 1, 1,
 ● Sinalização em pelo menos 3 métodos que podem disparar exceção (utilização do throws); (1,0 ponto) 1, 1, 1 >>Implementado<<
 ● Implementar pelo menos 2 classes próprias de exceção (Sua própria classe de Exceção) (Classe de exceção
 que você deverá criar de acordo com o seu programa); (1,0 ponto) 1, 1 >>Implementado<<

 ● Herança em pelo menos 5 classes; (1,0 ponto) >>Implementado<<

 ● Polimorfismo de sobreposição em pelo menos 3 classes; (0,5 ponto) 1,1,1 >>Implementado<<
 ● Polimorfismo de sobrecarga em pelo menos 3 classes; (0,5 ponto) 1,1,1 >>Implementado<<

 ● Método toString implementado em todos os objetos; (0,5 ponto) >>Implementado<<
 ● Uso de encapsulamento; (0,5 ponto) >>Implementado<<

 ● Uso de Collections (Uma List e uma Set ou Map) em pelo menos duas classes. (0,5 ponto) 1, 1 >>Implementado<<

 ● Utilização de Arquivos: leitura e escrita (1,0 ponto).

 ● Modelagem do diagrama de classe do sistema no padrão UML (1,0 ponto) >>Implementado<<

 ● BÔNUS: Interface gráfica da solução (1,0 ponto)